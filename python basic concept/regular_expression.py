# 정규 표현식
# 메타 문자 (meta characters) = 원래 그 문자가 가진 뜻이 아닌 특별한 용도로 사용하는 문자
# . ^ $ * + ? { } [ ] \ | ( )

# 1. 문자 클래스 []
# - 문자 클래스로 만들어진 정규식은 "[] 사이의 문자들과 매치" 라는 의미를 가짐
# * 예를 들어 [abc] 라면 이는 "a, b, c 중 한 개의 문자와 매치" 를 뜻함
#   - ex. "a", "before", "dude"가 정규식 [abc]와 어떻게 매치되는지 살펴보기
#   - "a" 는 정규식과 일치하는 문자인 "a"가 있으므로 매치
#   - "before" 는 정규식과 일치하는 문자인 "b"가 있으므로 매치
#   - "dude" 는 정규식과 일치하는 문자인 a,b,c 중 어느 하나도 포함하지 않으므로 매치 X 
# * []안의 두 문자 사이에 하이폰(-)을 사용하면 두 문자 사이의 범위 (from-to)를 의미
#   - ex. [a-c] = [abc]
#   - ex. [0-5] = [012345]
#   - ex. [a-zA-Z] = 알파벳 모두
#   - ex. [0-9] = 숫자 모두
# * "^"
#   = 문자 클래스안에 "^"를 사용할 경우 반대(not)이라는 의미를 가짐
#   - ex. [^0-9] = 숫자가 아닌 문자만 매치

# 자주 사용하는 문자 클래스
# * \d = 숫자와 매치. [0-9]와 동일
# * \D = 숫자가 아닌 것과 매치. [^0-9]와 동일
# * \s = whitespace 문자와 매치. [ \t\n\r\f\v]와 동일 (맨 앞의 빈칸은 공백문자(space))
# * \S = whitespace 문자가 아닌 것과 매치. [^ \t\n\r\f\v]와 동일
# * \w = 문자 + 숫자 (alphanumeric)와 매치. [a-zA-Z0-9_]와 동일
# * \W = 문자 + 숫자 (alphanumeric)이 아닌 문자와 매치. [^a-zA-Z0-9_]와 동일